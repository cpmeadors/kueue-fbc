{
    "schema": "olm.package",
    "name": "kueue-operator",
    "defaultChannel": "stable-v0.1"
}
{
    "schema": "olm.channel",
    "name": "stable-v0.1",
    "package": "kueue-operator",
    "entries": [
        {
            "name": "kueue-operator.v0.1.0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "kueue-operator.v0.1.0",
    "package": "kueue-operator",
    "image": "registry.redhat.io/kueue-tech-preview/kueue-operator-bundle@sha256:a273e8bbd5e93b814e0855015ff7e5ec051689dca71d1409e8fb897e94bd275a",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "operator.openshift.io",
                "kind": "Kueue",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "kueue-operator",
                "version": "0.1.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMua3VldWUueC1rOHMuaW8vYmF0Y2gtYWRtaW4iOiJ0cnVlIn19XX0sImFwaVZlcnNpb24iOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxIiwia2luZCI6IkNsdXN0ZXJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJhcHAua3ViZXJuZXRlcy5pby9jb21wb25lbnQiOiJjb250cm9sbGVyIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6Imt1ZXVlIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoia3VldWUtYmF0Y2gtYWRtaW4tcm9sZSJ9LCJydWxlcyI6bnVsbH0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhZ2dyZWdhdGlvblJ1bGUiOnsiY2x1c3RlclJvbGVTZWxlY3RvcnMiOlt7Im1hdGNoTGFiZWxzIjp7InJiYWMua3VldWUueC1rOHMuaW8vYmF0Y2gtdXNlciI6InRydWUifX1dfSwiYXBpVmVyc2lvbiI6InJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEiLCJraW5kIjoiQ2x1c3RlclJvbGUiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6ImNvbnRyb2xsZXIiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoia3VldWUiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJrdWV1ZS1iYXRjaC11c2VyLXJvbGUifSwicnVsZXMiOm51bGx9"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/kueue-tech-preview/kueue-operator-bundle@sha256:a273e8bbd5e93b814e0855015ff7e5ec051689dca71d1409e8fb897e94bd275a"
        },
        {
            "name": "",
            "image": "registry.redhat.io/kueue-tech-preview/kueue-rhel9-operator@sha256:558f365fd53e751981cf118605ae5e05496ef36d820ae9803b62236dfe82ae57"
        },
        {
            "name": "operand-image",
            "image": "registry.redhat.io/kueue-tech-preview/kueue-rhel9@sha256:5e1c44d2a931df99c9d068720b787fffd0dfa9afee5b6c85a63fcddee0dcbd38"
        }
    ]
}
